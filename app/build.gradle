import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
	compileSdkVersion 23
	buildToolsVersion "23.0.3"
	
	defaultConfig {
		applicationId "com.leon.hfu.cameratrack"
		minSdkVersion 15
		targetSdkVersion 23
		versionCode 1
		versionName "1.0"
		
		ndk {
			moduleName "cameratracker"
		}
	}
	
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
		debug {
			debuggable true
			minifyEnabled false
		}
	}
	
	sourceSets.main.jni.srcDirs = []
	sourceSets.main.jniLibs.srcDir 'src/main/libs'
	
	task ndkBuild(type: Exec) {
		workingDir file('src/main')
		commandLine getNdkBuildCmd(), 'NDK_DEBUG=1'
	}
	
	tasks.withType(JavaCompile) {
		compileTask -> compileTask.dependsOn ndkBuild
	}
	
	task cleanNative(type: Exec) {
		workingDir file('src/main')
		commandLine getNdkBuildCmd(), 'clean'
	}
	
	clean.dependsOn cleanNative
}

dependencies {
	compile fileTree(include: ['*.jar'], dir: 'libs')
	testCompile 'junit:junit:4.12'
	compile 'com.android.support:appcompat-v7:23.3.0'
	compile 'com.android.support:design:23.3.0'
	compile 'com.android.support:support-v4:23.3.0'
}

def getNdkDir() {
	Properties properties = new Properties()
	properties.load(project.rootProject.file('local.properties').newDataInputStream())
	def ndkdir = properties.getProperty('ndk.dir', null)
	
	if (ndkdir != null) {
		return ndkdir
	}
	
	if (System.env.ANDROID_NDK_ROOT == null) {
		throw new GradleException("NDK location not found. Define location with ndk.dir in the local.properties file or with an ANDROID_NDK_ROOT environment variable.")
	}
	
	return System.env.ANDROID_NDK_ROOT
}

def getNdkBuildCmd() {
	def ndkbuild = getNdkDir() + "/ndk-build"
	
	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		ndkbuild += ".cmd"
	}
	
	return ndkbuild
}
